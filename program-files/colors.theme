#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

chcolor() {
if [ ! -d "/data/data/com.termux/files/home/.termux" ];then cd $HOME ; mkdir .termux ;fi
if [ -d "/data/data/com.termux/files/home/theme-engine" ];then
mv colors.properties $HOME/theme-engine/temp
if [ -d "/data/data/com.termux/files/home/.termux/colors.properties" ];then cd $HOME ; rm /data/data/com.termux/files/home/.termux/colors.properties ;fi
cd $HOME/theme-engine/temp
mv colors.properties /data/data/com.termux/files/home/.termux
termux-reload-settings
printf "\e[0;1;7m [√] Color-Scheme Applied Successfully              \e[0m" ;echo ;fi ; }

termux() {
if [ ! -d "/data/data/com.termux/files/home/theme-engine" ];then
if [ -d "/data/data/com.termux/files/home/.termux/colors" ];then
cd /data/data/com.termux/files/home/.termux/colors ;fi ;fi ; }

chcolor1() {
if [ ! -d "/data/data/com.termux/files/home/theme-engine" ];then
if [ -d "/data/data/com.termux/files/home/.termux/colors" ];then
mv colors.properties /data/data/com.termux/files/home/.termux
termux-reload-settings
printf "\e[0;1;7m [√] Color-Scheme Applied Successfully              \e[0m" ;echo ;fi ;fi ; }

exit_on_signal_SIGINT () {
   { printf "\n\e[0;1;48;2;200;0;0m                Program interrupted.                \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

exit_on_signal_SIGTERM () {
    { printf "\n\e[0;1;48;2;200;0;0m                Program terminated.                 \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

trap exit_on_signal_SIGINT SIGINT ; trap exit_on_signal_SIGTERM SIGTERM

clear;echo -e "\e[0;1m
\e[0;1m▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
\e[0;1m█                                                  █
\e[0;1m█\e[1;38;2;0;230;118m     █▀▀ █▀█ █   █▀█ █▀█ ▄▄ █▀▄▀█ █▀▀ █▄ █ █ █\e[0;1m    █
\e[0;1m█\e[1;38;2;0;230;118m     █▄▄ █▄█ █▄▄ █▄█ █▀▄    █ ▀ █ ██▄ █ ▀█ █▄█\e[0;1m    █
\e[0;1m█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█

┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ \e[0;1m[01] aci.colors    \e[0;1m[23] monokai.dark.colors      ┃
┃ \e[0;1m[02] aco.colors    \e[0;1m[24] nep.colors               ┃
┃ \e[0;1m[03] azu.colors    \e[0;1m[25] ocean.dark.colors        ┃
┃ \e[0;1m[04] bim.colors    \e[0;1m[26] one.dark.colors          ┃
┃ \e[0;1m[05] cai.colors    \e[0;1m[27] one.light.colors         ┃
┃ \e[0;1m[06] chalk.colors  \e[0;1m[28] pali.colors              ┃
┃ \e[0;1m[07] default       \e[0;1m[29] peppermint.colors        ┃
┃ \e[0;1m[08] dracula       \e[0;1m[30] sat.colors               ┃
┃ \e[0;1m[09] elementary    \e[0;1m[31] shel.colors              ┃
┃ \e[0;1m[10] elic.colors   \e[0;1m[32] smyck.colors             ┃
┃ \e[0;1m[11] elio.colors   \e[0;1m[33] solarized.dark.colors    ┃
┃ \e[0;1m[12] flat.colors   \e[0;1m[34] solarized.light.colors   ┃
┃ \e[0;1m[13] freya.colors  \e[0;1m[35] tango.colors             ┃
┃ \e[0;1m[14] gruvbox.dark  \e[0;1m[36] tin.colors               ┃
┃ \e[0;1m[15] hemisu.dark   \e[0;1m[37] tomorrow.colors          ┃
┃ \e[0;1m[16] hemisu.light  \e[0;1m[38] tomorrow.night.blue      ┃
┃ \e[0;1m[17] hybrid.colors \e[0;1m[39] tomorrow.night.bright    ┃
┃ \e[0;1m[18] jup.colors    \e[0;1m[40] tomorrow.night           ┃
┃ \e[0;1m[19] mar.colors    \e[0;1m[41] tomorrow.night.eighties  ┃
┃ \e[0;1m[20] material      \e[0;1m[42] ura.colors               ┃
┃ \e[0;1m[21] miu.colors    \e[0;1m[43] vag.colors               ┃
┃ \e[0;1m[22] materialOcean \e[0;1m[44] weathered.dark.colors    ┃
┃                                                  ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"

printf "\e[1;30;48;2;0;230;118m [!] Choose an Color Scheme :                       \e[0m"
PUT 33 31
printf "\e[1;30;48;2;0;230;118m"
read color
printf "\e[0m"
if [[ $color = "1" ]] || [[ $color = "01" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp aci.colors colors.properties
chcolor
chcolor1

elif [[ $color = "2" ]] || [[ $color = "02" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp aco.colors colors.properties
chcolor1
chcolor

elif [[ $color = "3" ]] || [[ $color = "03" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp azu.colors colors.properties
chcolor1
chcolor

elif [[ $color = "4" ]] || [[ $color = "04" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp bim.colors colors.properties
chcolor1
chcolor

elif [[ $color = "5" ]] || [[ $color = "05" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp cai.colors colors.properties
chcolor1
chcolor

elif [[ $color = "6" ]] || [[ $color = "06" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp chalk.colors colors.properties
chcolor1
chcolor

elif [[ $color = "7" ]] || [[ $color = "07" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp default.colors colors.properties
chcolor1
chcolor

elif [[ $color = "8" ]] || [[ $color = "08" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp dracula.colors colors.properties
chcolor1
chcolor

elif [[ $color = "9" ]] || [[ $color = "09" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp elementary.colors colors.properties
chcolor1
chcolor
termux
elif [[ $color = "10" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp elic.colors colors.properties
chcolor1
chcolor

elif [[ $color = "11" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp elio.colors colors.properties
chcolor1
chcolor

elif [[ $color = "12" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp flat.colors colors.properties
chcolor1
chcolor

elif [[ $color = "13" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp freya.colors colors.properties
chcolor1
chcolor

elif [[ $color = "14" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp gruvbox.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "15" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp hemisu.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "16" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp hemisu.light.colors colors.properties
chcolor1
chcolor

elif [[ $color = "17" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp hybrid.colors colors.properties
chcolor1
chcolor

elif [[ $color = "18" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp jup.colors colors.properties
chcolor1
chcolor

elif [[ $color = "19" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp mar.colors colors.properties
chcolor1
chcolor

elif [[ $color = "20" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp material.colors colors.properties
chcolor1
chcolor

elif [[ $color = "21" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp miu.colors colors.properties
chcolor1
chcolor

elif [[ $color = "22" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp material.ocean.colors colors.properties
chcolor1
chcolor

elif [[ $color = "23" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp monokai.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "24" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp nep.colors colors.properties
chcolor1
chcolor

elif [[ $color = "25" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp ocean.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "26" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp one.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "27" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp one.light.colors colors.properties
chcolor1
chcolor

elif [[ $color = "28" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp pali.colors colors.properties
chcolor1
chcolor

elif [[ $color = "29" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp peppermint.colors colors.properties
chcolor1
chcolor

elif [[ $color = "30" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp sat.colors colors.properties
chcolor1
chcolor

elif [[ $color = "31" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp shel.colors colors.properties
chcolor1
chcolor

elif [[ $color = "32" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp smyck.colors colors.properties
chcolor1
chcolor

elif [[ $color = "33" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp solarized.dark.colors colors.properties
chcolor1
chcolor

elif [[ $color = "34" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp solarized.light.colors colors.properties
chcolor1
chcolor

elif [[ $color = "35" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tango.colors colors.properties
chcolor1
chcolor

elif [[ $color = "36" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tin.colors colors.properties
chcolor1
chcolor

elif [[ $color = "37" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tomorrow.colors colors.properties
chcolor1
chcolor

elif [[ $color = "38" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tomorrow.night.blue.colors colors.properties
chcolor1
chcolor

elif [[ $color = "39" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tomorrow.night.bright.colors colors.properties
chcolor1
chcolor

elif [[ $color = "40" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tomorrow.night.colors colors.properties
chcolor1
chcolor

elif [[ $color = "41" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp tomorrow.night.eighties.colors colors.properties
chcolor1
chcolor

elif [[ $color = "42" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp ura.colors colors.properties
chcolor1
chcolor

elif [[ $color = "43" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp vag.colors colors.properties
chcolor1
chcolor

elif [[ $color = "44" ]];then
cd $HOME/theme-engine/colors &> /dev/null
termux
cp weathered.light.colors colors.properties
chcolor1
chcolor
else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
