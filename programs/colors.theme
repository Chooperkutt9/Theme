#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

source return.error &> /dev/null
if [[ $? != "0" ]];then
oncode() {
return 105
}
fi

distro=$(uname -o | grep -o "Android")

if [[ $distro == *'Android'* ]];then
:
else echo "Theme-Engine isn't supported you're system."
exit 0
fi

## colors
# foreground
Fgreen=$'\e[0;1;38;2;0;230;118m'   Fblue=$'\e[0;1;38;2;40;90;255m'   Fsky=$'\e[0;1;38;2;0;255;255m'
Fpurple=$'\e[0;1;38;2;101;31;255m' Fyellow=$'\e[0;1;38;2;200;255;0m' Fred=$'\e[0;1;38;2;200;0;0m' Bcyan=$'\e[0;1;38;5;49m'
# background
Bgreen=$'\e[0;1;30;48;2;0;230;118m'   Bblue=$'\e[0;1;48;2;40;90;255m'   Bsky=$'\e[0;1;30;48;2;0;255;255m'
Bpurple=$'\e[0;1;48;2;101;31;255m' Byellow=$'\e[0;1;30;48;2;200;255;0m' Bred=$'\e[0;1;48;2;200;0;0m' Bcyan=$'\e[0;1;30;48;5;49m' Bwhite=$'\e[0;1;7m' BU=$"\e[38;2;129;175;239m"
# google
G=$'\e[0;1;38;2;60;186;84m' Y=$'\e[0;1;38;2;244;194;13m'
R=$'\e[0;1;38;2;219;50;54m' B=$'\e[0;1;38;2;72;133;237m'
## Reset Colors
C=$'\e[0;1m' V=$'2.6.0'

if ! hash tput &> /dev/null
then
apt install ncurses-utils -y
fi

if [ ! -d "$HOME/.termux" ];then cd $HOME ; mkdir .termux ;fi

if [[ $1 == "-p" || $1 == "--print" ]];then
oncode &> /dev/null
 if [[ $? != "105" ]];then
 source colors.list ${1} ${2}
 exit 0
 else
bash <(curl -fSsL "https://raw.githubusercontent.com/abhackerofficial/Theme-Engine/master/programs/colors.list") ${1} ${2}
 exit 0
 fi
fi

C1="accent.material.colors"     C2="apathy-dark.colors"
C3="apathy-light.colors"        C4="argonaut.colors"
C5="ashes-dark.colors"          C6="ashes-light.colors"
C7="atelierforest-dark.colors"  C8="atelierforest-light.colors"
C9="atelierheath-dark.colors"   C10="atelierheath-light.colors"

C13="atelierlakeside-dark.colors" C14="atelierlakeside-light.colors"
C15="atelierseaside-dark.colors"  C16="atelierseaside-light.colors"
C17="black-on-white.colors"       C18="codeschool-dark.colors"
C19="codeschool-light.colors"     C20="colors-dark.colors"

C21="colors-light.colors"       C22="dracula.colors"
C23="default-dark.colors"       C24="default-light.colors"
C25="eighties-dark.colors"      C26="eighties-light.colors"
C27="onedark.colors"           C28="one-light.colors"
C29="fizzbuzz.colors"           C30="flat-dark.colors"

C31="google-dark.colors"        C32="google-light.colors"
C33="google-pixel.colors"       C34="google-blue.colors"
C35="flat-light.colors"         C36="greenscreen-dark.colors"
C37="greenscreen-light.colors"  C38="gruvbox-dark.colors"
C39="gruvbox-light.colors"      C40="white-on-black.colors"

C41="harmonic16-dark.colors"    C42="harmonic16-light.colors"
C43="isotope-dark.colors"       C44="londontube-light.colors"
C45="marrakesh-dark.colors"     C46="marrakesh-light.colors"
C47="materia.colors"            C48="material.colors"
C49="material.dark.colors"      C50="material.light.colors"

C51="mocha-dark.colors"         C52="mocha-light.colors"
C53="monokai-dark.colors"       C54="monokai-light.colors"
C55="neon.colors"               C56="nord.colors"
C57="ocean-dark.colors"         C58="ocean-light.colors"
C59="embers-dark.colors"        C60="embers-light.colors"

C61="isotope-dark.colors"       C62="londontube-light.colors"
C63="paraiso-dark.colors"       C64="paraiso-light.colors"
C65="rydgel.colors"             C66="shapeshifter-dark.colors"
C67="shapeshifter-light.colors" C68="smyck.colors"
C69="solarized-dark.colors"     C70="solarized-light.colors"

C71="spacemacs.colors"          C72="summerfruit-dark.colors"
C73="summerfruit-light.colors"  C74="tomorrow-dark.colors"
C75="tomorrow-light.colors"     C76="tomorrow-night.colors"
C77="tron-legacy.colors"        C78="twilight-dark.colors"
C79="twilight-light.colors"     C80="wild-cherry.colors"

                    integer="C${2#0}"

AURL="https://raw.githubusercontent.com/abhackerofficial/Theme-Engine/master/colors/${!integer}"
MAINURL="https://raw.githubusercontent.com/abhackerofficial/Theme-Engine/master/colors"
PREVIEW="https://raw.githubusercontent.com/abhackerofficial/Theme-Engine/master/programs/preview.theme"

file_not_found() {
echo -e "\nconfigure Theme-Engine to access that feature...!
configure using:

1st step :
bash <(curl -fsSL "'"https://git.io/theme-engine"'")

2nd step :
theme-engine --configure\n"

exit 0
}

value_not_found() {
echo "Choosen ‘${1}’ is not available in value...!"
echo "Command usage :
bash <(curl -fsSL "'"https://git.io/tcolors"'") -c <1-80>

example :
bash <(curl -fsSL "'"https://git.io/tcolors"'") -c 22
"
exit 1
}

oncode &> /dev/null
if [[ $? != "105" ]];then
if [[ -f "$HOME/.termux/config.theme-engine" ]];then rm $HOME/.termux/config.theme-engine ;fi
if [[ ! -d "$HOME/.termux/colors" ]];then
file_not_found

elif [[ ! -d "$PREFIX/share/Theme-Engine" ]];then
file_not_found

elif [[ ! -f "$PREFIX/bin/theme-engine" ]];then
file_not_found

fi
fi

set_maintainer() { oncode &> /dev/null
if [[ $? != "105" ]];then
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
cd $PREFIX/share/Theme-Engine/colors
else
cd $HOME/.termux/colors
fi
else
cd $TMPDIR
fi
echo -ne "\033]12;#b4e1fd\007"
echo -e "Color scheme : ${1}"
echo -e "Arriving preview of color : ${1}"
oncode &> /dev/null
if [[ $? == "105" ]];then
curl -so ${TMPDIR}/${1} ${MAINURL}/${1}
curl -so ${TMPDIR}/preview.theme ${PREVIEW}
bash ${TMPDIR}/preview.theme -p ${TMPDIR}/${1}
else
bash $PREFIX/share/Theme-Engine/programs/preview.theme -p ${1}
fi
printf "Would you like to apply this color scheme (Y/N) : "
read i
if [[ $i == "y" || $i == "Y" ]];then
pwd &> /dev/null
else
echo -ne "\033]12;#b4e1fd\007"
exit 1
fi
}

change_mode() { oncode &> /dev/null
if [[ $? == "105" ]];then
cp ${TMPDIR}/${1} $HOME/.termux/colors.properties
#curl -so $HOME/.termux/colors.properties ${MAINURL}/${1}
else
cp ${1} $HOME/.termux/colors.properties
fi
}

change_col() {
echo -ne "\033]12;#b4e1fd\007"
echo "Now ready to apply color scheme : ${1}"
HIDCRSR
termux-reload-settings | printf "Color scheme Reloading...!\r\e[0m"
printf "Color scheme applied Successfully...\e[0m\n"
NORM
}

argument_mode() {
printf "\nThe Colors                       #v$V\n\n"
for c in {0..15}; do
echo -n "$(tput setaf $c)█████$(tput sgr0)"
[[ $c == 7 ]] && echo # new line
done
printf "\n\n"
set_maintainer ${!integer}
change_mode ${!integer}
change_col ${!integer}
}

random_colors() {
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
random_scheme=$(ls $PREFIX/share/Theme-Engine/colors | shuf -n 1)
{ cp $PREFIX/share/Theme-Engine/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings | printf "${Bgreen}  [i] Color-Scheme Reloading...                     \e[0m\r"
printf "${Bgreen}  [√] Random-Color-Scheme Applied Successfully      \e[0m";echo; exit;}
else
random_scheme=$(ls $HOME/.termux/colors | shuf -n 1)
{ cp $HOME/.termux/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings | printf "${Bgreen}  [i] Color-Scheme Reloading...                     \e[0m\r"
printf "${Bgreen}  [√] Random-Color-Scheme Applied Successfully      \e[0m";echo; exit;} ;fi ;}

exit_on_signal_SIGINT () {
   { printf "\n\e[0;1;48;2;200;0;0m                Program interrupted.                \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

exit_on_signal_SIGTSTP () {
    { printf "\n\e[0;1;48;2;200;0;0m                Program terminated.                 \e[0m" 2>&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

trap exit_on_signal_SIGINT SIGINT
trap exit_on_signal_SIGTSTP SIGTSTP

if [[ $1 == "-c" || $1 == "--color" ]];then
if [[ $2 =~ ^-?[0-9]*[.,]?[0-9]*[eE]?-?[0-9]+$ ]];then
if [[ $2 -gt 80 ]];then
   value_not_found ${2#0}
   else
if [[ ${2#0} == 11 ]];then
   value_not_found ${2#0}
elif  [[ ${2#0} == 12 ]];then
   value_not_found ${2#0}
fi
   argument_mode
   exit 0
fi
   else
   value_not_found ${2#0}
fi
fi

banner() {
echo -ne "\033]12;#363636\007";clear
echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ (01) accent.material (21) colors.light           ┃
\e[0;1m┃ (02) apathy.dark     (22) dracula.colors         ┃
\e[0;1m┃ (03) apathy.light    (23) default-dark.colors    ┃
\e[0;1m┃ (04) argonaut.colors (24) default-light.colors   ┃
\e[0;1m┃ (05) ashes.dark      (25) eighties-dark.colors   ┃
\e[0;1m┃ (06) ashes.light     (26) eighties-light.colors  ┃
\e[0;1m┃ (07) forest.dark     (27) \e[38;2;224;108;117mo\e[38;2;152;195;121mn\e[38;2;229;192;123me\e[38;2;97;175;239md\e[38;2;198;120;221ma\e[38;2;86;182;194mr\e[38;2;100;100;100mk\e[0m.colors         ┃
\e[0;1m┃ (08) forest.light    (28) one-light.colors       ┃
\e[0;1m┃ (09) heath.dark      (29) fizzbuzz.colors        ┃
\e[0;1m┃ (10) heath.light     (30) flat-dark.colors       ┃
\e[0;1m┃ (11) ${Fyellow}import.local    \e[0;1m(31) ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.dark.colors     \e[0;1m┃
\e[0;1m┃ (12) ${Fsky}import.online   \e[0;1m(32) ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.light.colors    \e[0;1m┃
\e[0;1m┃ (13) lakeside.dark   \e[0;1m(33) ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.pixel.colors    ┃
\e[0;1m┃ (14) lakeside-light  \e[0;1m(34) ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.${BU}blue${C}.colors     ┃
\e[0;1m┃ (15) seaside-dark    (35) flat-light.colors      ┃
\e[0;1m┃ (16) seaside.light   (36) greenscreen.dark       ┃
\e[0;1m┃ (17) black-on-white  (37) greenscreen.light      ┃
\e[0;1m┃ (18) codeschool.dark (38) gruvbox-dark.colors    ┃
\e[0;1m┃ (19) codeschool.light(39) gruvbox-light.colors   ┃
\e[0;1m┃ (20) colors.dark     (40) white-on-black.colors  ┃
\e[0;1m┃ (RC) ${Fgreen}random.colors   \e[0;1m(>>) Next Page              ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner2() {
echo -ne "\033]12;#363636\007";clear
echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ [41] harmonic16.dark [61] isotope-dark.colors    ┃
\e[0;1m┃ [42] harmonic16.light[62] isotope-light.colors   ┃
\e[0;1m┃ [42] londontube.dark [64] paraiso-dark.colors    ┃
\e[0;1m┃ [44] londontube.light[64] paraiso-light.colors   ┃
\e[0;1m┃ [45] marrakesh.dark  [65] rydgel.colors          ┃
\e[0;1m┃ [46] marrakesh.light [66] shapeshifter.dark      ┃
\e[0;1m┃ [47] materia.colors  [67] shapeshifter.light     ┃
\e[0;1m┃ [48] material.colors [68] smyck.colors           ┃
\e[0;1m┃ [49] material.dark   [69] solarized-dark.colors  ┃
\e[0;1m┃ [50] material.light  [70] solarized-loght.colors ┃
\e[0;1m┃ [51] mocha.dark      [71] spacemacs.colors       ┃
\e[0;1m┃ [52] mocha.light     [72] summerfruit.dark       ┃
\e[0;1m┃ [53] monokai.dark    [73] summerfruit.light      ┃
\e[0;1m┃ [54] monokai.light   [74] tomorrow-dark.colors   ┃
\e[0;1m┃ [55] neon.colors     [75] tomorrow-light.colors  ┃
\e[0;1m┃ [56] nord.colors     [76] tomorrow-night.colors  ┃
\e[0;1m┃ [57] ocean.dark      [77] tron-legacy.colors     ┃
\e[0;1m┃ [58] ocean.light     [78] twilight-dark.colors   ┃
\e[0;1m┃ [59] embers-dark     [79] twilight-light.colors  ┃
\e[0;1m┃ [60] embers-light    [80] zenburn.colors         ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner
printf "${Bwhite}  (!) Choose an Color Scheme :                      \e[0m"
PUT 31 32
printf "${Bwhite}"
read color
printf "\e[0m"
echo -ne "\033]12;#00E676\007"
                       intecol="C${color#0}"

if [[ $color = "1" ]] || [[ $color = "01" ]];then
set_maintainer ${!intecol}
change_mode ${!intecol}
change_col ${!intecol}

elif [[ $color = "2" ]] || [[ $color = "02" ]];then
set_maintainer $C2
change_mode $C2
change_col $C2

elif [[ $color = "3" ]] || [[ $color = "03" ]];then
set_maintainer $C3
change_mode $C3
change_col $C3

elif [[ $color = "4" ]] || [[ $color = "04" ]];then
set_maintainer $C4
change_mode $C4
change_col $C4

elif [[ $color = "5" ]] || [[ $color = "05" ]];then
set_maintainer $C5
change_mode $C5
change_col $C5

elif [[ $color = "6" ]] || [[ $color = "06" ]];then
set_maintainer $C6
change_mode $C6
change_col $C6

elif [[ $color = "7" ]] || [[ $color = "07" ]];then
set_maintainer $C7
change_mode $C7
change_col $C7

elif [[ $color = "8" ]] || [[ $color = "08" ]];then
set_maintainer $C8
change_mode $C8
change_col $C8

elif [[ $color = "9" ]] || [[ $color = "09" ]];then
set_maintainer $C9
change_mode $C9
change_col $C9

elif [[ $color = "10" ]];then
set_maintainer $C10
change_mode $C10
change_col $C10

elif [[ $color = "11" ]];then
printf "${Byellow}  [*] Enter Color Path :                            \e[0m"
PUT 32 26
printf "${Byellow}"
read -s path
if [ -f "$path" ];then
cp $path $HOME/.termux/colors.properties &> /dev/null
PUT 32 26
HIDCRSR
printf "/data/data/com.termux/files"
termux-reload-settings
printf "\n\e[0;1;7m  [√] Color-Scheme Applied Successfully             \e[0m";echo
NORM
else
echo -e "\n\e[0;1;7m                Invalid file format !               \e[0m"
echo -ne "\033]12;#b4e1fd\007"
fi

elif [[ $color = "12" ]];then
spin () {

local pid=$!
local delay=0.25
local spinner=( '' '.' '..' '...' )

while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do

for i in "${spinner[@]}"
do
	HIDCRSR
        PUT 32 1
        printf "${Bsky}                                                    "
	echo -ne "\e[1m\r  [⬇] Color Scheme Downloading$i";
	sleep $delay
        printf "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b";
done
done
termux-reload-settings;NORM
printf "\e[0;1;7m  [√] Color-Scheme Applied Successfully             \e[0m";echo

}

printf "${Bsky}  [*] Enter Url of ColorSheme :                     \e[0m"
PUT 32 33
read -s color_url
if [[ $color_url = https* ]];then
PUT 32 33
HIDCRSR;printf "${Bsky}https://************\e[0m\n"
sleep 0.6
trap '' 2
( wget -O $HOME/.termux/colors.properties $color_url -q &> /dev/null ) &> /dev/null & spin
trap 5
else
echo -e "\n\e[0;1;7m             You entered Invalid Url !              "
echo -ne "\033]12;#b4e1fd\007"
exit
fi

elif [[ $color = "rc" ]] || [[ $color = "RC" ]];then
#
#term
#cp "random_colors" $HOME/.termux/colors.properties
#
#change_col
random_colors

elif [[ $color = "13" ]];then
set_maintainer $C13
change_mode $C13
change_col $C13

elif [[ $color = "14" ]];then
set_maintainer $C14
change_mode $C14
change_col $C14

elif [[ $color = "15" ]];then
set_maintainer $C15
change_mode $C15
change_col $C15

elif [[ $color = "16" ]];then
set_maintainer $C16
change_mode $C16
change_col $C16

elif [[ $color = "17" ]];then
set_maintainer $C17
change_mode $C17
change_col $C17

elif [[ $color = "18" ]];then
set_maintainer $C18
change_mode $C18
change_col $C18

elif [[ $color = "19" ]];then
set_maintainer $C19
change_mode $C19
change_col $C19

elif [[ $color = "20" ]];then
set_maintainer $C20
change_mode $C20
change_col $C20

elif [[ $color = "21" ]];then
set_maintainer $C21
change_mode $C21
change_col $C21

elif [[ $color = "22" ]];then
set_maintainer $C22
change_mode $C22
change_col $C22

elif [[ $color = "23" ]];then
set_maintainer $C23
change_mode $C23
change_col $C23

elif [[ $color = "24" ]];then
set_maintainer $C24
change_mode $C24
change_col $C24

elif [[ $color = "25" ]];then
set_maintainer $C25
change_mode $C25
change_col $C25

elif [[ $color = "26" ]];then
set_maintainer $C26
change_mode $C26
change_col $C26

elif [[ $color = "27" ]];then
set_maintainer $C27
change_mode $C27
change_col $C27

elif [[ $color = "28" ]];then
set_maintainer $C28
change_mode $C28
change_col $C28

elif [[ $color = "29" ]];then
set_maintainer $C29
change_mode $C29
change_col $C29

elif [[ $color = "30" ]];then
set_maintainer $C30
change_mode $C30
change_col $C30

elif [[ $color = "31" ]];then
set_maintainer $C31
change_mode $C31
change_col $C31

elif [[ $color = "32" ]];then
set_maintainer $C32
change_mode $C32
change_col $C32

elif [[ $color = "33" ]];then
set_maintainer $C33
change_mode $C33
change_col $C33

elif [[ $color = "34" ]];then
set_maintainer $C34
change_mode $C34
change_col $C34

elif [[ $color = "35" ]];then
set_maintainer $C35
change_mode $C35
change_col $C35

elif [[ $color = "36" ]];then
set_maintainer $C36
change_mode $C36
change_col $C36

elif [[ $color = "37" ]];then
set_maintainer $C37
change_mode $C37
change_col $C37

elif [[ $color = "38" ]];then
set_maintainer $C38
change_mode $C38
change_col $C38

elif [[ $color = "39" ]];then
set_maintainer $C39
change_mode $C39
change_col $C39

elif [[ $color = "40" ]];then
set_maintainer $C40
change_mode $C40
change_col $C40

elif [[ $color = ">>" ]];then
banner2
printf "${Bwhite}  [i] Choose an Color Scheme :                      \e[0m"
PUT 30 32
printf "${Bwhite}"
read color
printf "\e[0m"
echo -ne "\033]12;#00E676\007"

if [[ $color = "41" ]];then
set_maintainer $C41
change_mode $C41
change_col $C41

elif [[ $color = "42" ]];then
set_maintainer $C42
change_mode $C42
change_col $C42

elif [[ $color = "43" ]];then
set_maintainer $C43
change_mode $C43
change_col $C43

elif [[ $color = "44" ]];then
set_maintainer $C44
change_mode $C44
change_col $C44

elif [[ $color = "45" ]];then
set_maintainer $C45
change_mode $C45
change_col $C45

elif [[ $color = "46" ]];then
set_maintainer $C46
change_mode $C46
change_col $C46

elif [[ $color = "47" ]];then
set_maintainer $C47
change_mode $C47
change_col $C47

elif [[ $color = "48" ]];then
set_maintainer $C48
change_mode $C48
change_col $C48

elif [[ $color = "49" ]];then
set_maintainer $C49
change_mode $C49
change_col $C49

elif [[ $color = "50" ]];then
set_maintainer $C50
change_mode $C50
change_col $C50

elif [[ $color = "51" ]];then
set_maintainer $C51
change_mode $C51
change_col $C51

elif [[ $color = "52" ]];then
set_maintainer $C52
change_mode $C52
change_col $C52

elif [[ $color = "53" ]];then
set_maintainer $C53
change_mode $C53
change_col $C53

elif [[ $color = "54" ]];then
set_maintainer $C54
change_mode $C54
change_col $C54

elif [[ $color = "55" ]];then
set_maintainer $C55
change_mode $C55
change_col $C55

elif [[ $color = "56" ]];then
set_maintainer $C56
change_mode $C56
change_col $C56

elif [[ $color = "57" ]];then
set_maintainer $C57
change_mode $C57
change_col $C57

elif [[ $color = "58" ]];then
set_maintainer $C58
change_mode $C58
change_col $C58

elif [[ $color = "59" ]];then
set_maintainer $C59
change_mode $C59
change_col $C59

elif [[ $color = "60" ]];then
set_maintainer $C60
change_mode $C60
change_col $C60

elif [[ $color = "61" ]];then
set_maintainer $C61
change_mode $C61
change_col $C61

elif [[ $color = "62" ]];then
set_maintainer $C62
change_mode $C62
change_col $C62

elif [[ $color = "63" ]];then
set_maintainer $C63
change_mode $C63
change_col $C63

elif [[ $color = "64" ]];then
set_maintainer $C64
change_mode $C64
change_col $C64

elif [[ $color = "65" ]];then
set_maintainer $C65
change_mode $C65
change_col $C65

elif [[ $color = "66" ]];then
set_maintainer $C66
change_mode $C66
change_col $C66

elif [[ $color = "67" ]];then
set_maintainer $C67
change_mode $C67
change_col $C67

elif [[ $color = "68" ]];then
set_maintainer $C68
change_mode $C68
change_col $C68

elif [[ $color = "69" ]];then
set_maintainer $C69
change_mode $C69
change_col $C69

elif [[ $color = "70" ]];then
set_maintainer $C70
change_mode $C70
change_col $C70

elif [[ $color = "71" ]];then
set_maintainer $C71
change_mode $C71
change_col $C71

elif [[ $color = "72" ]];then
set_maintainer $C72
change_mode $C72
change_col $C72

elif [[ $color = "73" ]];then
set_maintainer $C73
change_mode $C73
change_col $C73

elif [[ $color = "74" ]];then
set_maintainer $C74
change_mode $C74
change_col $C74

elif [[ $color = "75" ]];then
set_maintainer $C75
change_mode $C75
change_col $C75

elif [[ $color = "76" ]];then
set_maintainer $C76
change_mode $C76
change_col $C76

elif [[ $color = "77" ]];then
set_maintainer $C77
change_mode $C77
change_col $C77

elif [[ $color = "78" ]];then
set_maintainer $C78
change_mode $C78
change_col $C78

elif [[ $color = "79" ]];then
set_maintainer $C79
change_mode $C79
change_col $C79

elif [[ $color = "80" ]];then
set_maintainer $C80
change_mode $C80
change_col $C80

else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
# Thanks for uaing Theme-Engine.
