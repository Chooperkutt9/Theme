#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

## colors
# foreground
Fgreen=$'\e[0;1;38;2;0;230;118m'   Fblue=$'\e[0;1;38;2;40;90;255m'   Fsky=$'\e[0;1;38;2;0;255;255m'
Fpurple=$'\e[0;1;38;2;101;31;255m' Fyellow=$'\e[0;1;38;2;200;255;0m' Fred=$'\e[0;1;38;2;200;0;0m' Bcyan=$'\e[0;1;38;5;49m'
# background
Bgreen=$'\e[0;1;30;48;2;0;230;118m'   Bblue=$'\e[0;1;48;2;40;90;255m'   Bsky=$'\e[0;1;30;48;2;0;255;255m'
Bpurple=$'\e[0;1;48;2;101;31;255m' Byellow=$'\e[0;1;30;48;2;200;255;0m' Bred=$'\e[0;1;48;2;200;0;0m' Bcyan=$'\e[0;1;30;48;5;49m' Bwhite=$'\e[0;1;7m'
# google
G=$'\e[0;1;38;2;60;186;84m' Y=$'\e[0;1;38;2;244;194;13m'
R=$'\e[0;1;38;2;219;50;54m' B=$'\e[0;1;38;2;72;133;237m'
## Reset Colors
C=$'\e[0;1m'

if [ ! -d "$HOME/.termux" ];then cd $HOME ; mkdir .termux ;fi

C1="accent.material.colors"     C2="apathy-dark.colors"
C3="apathy-light.colors"        C4="argonaut.colors"
C5="ashes-dark.colors"          C6="ashes-light.colors"
C7="atelierforest-dark.colors"  C8="atelierforest-light.colors"
C9="atelierheath-dark.colors"   C10="atelierheath-light.colors"

C13="atelierlakeside-dark.colors" C14="atelierlakeside-light.colors"
C15="atelierseaside-dark.colors"  C16="atelierseaside-light.colors"
C17="black-on-white.colors"       C18="codeschool-dark.colors"
C19="codeschool-light.colors"     C20="colors-dark.colors"

C21="colors-light.colors"       C22="dracula.colors"
C23="default-dark.colors"       C24="default-light.colors"
C25="eighties-dark.colors"      C26="eighties-light.colors"
C27="embers-dark.colors"        C28="embers-light.colors"
C29="e-ink.colors"              C30="flat-dark.colors"

C31="google-dark.colors"        C32="google-light.colors"
C33="flat-light.colors"         C34="gnometerm.colors"
C35="gotham.colors"             C36="greenscreen-dark.colors"
C37="greenscreen-light.colors"  C38="gruvbox-dark.colors"
C39="gruvbox-light.colors"      C40="white-on-black.colors"

C41="harmonic16-dark.colors"    C42="harmonic16-light.colors"
C43="isotope-dark.colors"       C44="londontube-light.colors"
C45="marrakesh-dark.colors"     C46="marrakesh-light.colors"
C47="materia.colors"            C48="material.colors"
C49="material.dark.colors"      C50="material.light.colors"

C51="mocha-dark.colors"         C52="mocha-light.colors"
C53="monokai-dark.colors"       C54="monokai-light.colors"
C55="neon.colors"               C56="nord.colors"
C57="ocean-dark.colors"         C58="ocean-light.colors"
C59="one-dark.colors"           C60="one-light.colors"

C61="isotope-dark.colors"       C62="londontube-light.colors"
C63="paraiso-dark.colors"       C64="paraiso-light.colors"
C65="rydgel.colors"             C66="shapeshifter-dark.colors"
C67="shapeshifter-light.colors" C68="smyck.colors"
C69="solarized-dark.colors"     C70="solarized-light.colors"

C71="spacemacs.colors"          C72="summerfruit-dark.colors"
C73="summerfruit-light.colors"  C74="tomorrow-dark.colors"
C75="tomorrow-light.colors"     C76="tomorrow-night.colors"
C77="twilight-dark.colors"      C78="twilight-light.colors"
C79="wild-cherry.colors"        C80="zenburn.colors"

preview() {
echo -ne "\033]12;#b4e1fd\007"
echo -e "Color scheme : ${1}"
echo -e "Arriving preview of theme : ${1}"
bash $PREFIX/share/Theme-Engine/programs/preview.theme -p ${1}
printf "Would you like to apply this color scheme (Y/N) : "
read i
if [[ $i == "y" || $i == "Y" ]];then
pwd &> /dev/null
else
echo -ne "\033]12;#b4e1fd\007"
exit 0
fi
}

change_loc() {
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
cd $PREFIX/share/Theme-Engine/colors
else
cd $HOME/.termux/colors
fi
}

change_col() {
echo -ne "\033]12;#b4e1fd\007"
echo "Now ready to apply color scheme : ${1}"
HIDCRSR
termux-reload-settings | printf "Color scheme Reloading...!\r\e[0m"
printf "Color scheme applied Successfully...\e[0m\n"
NORM
}

random_colors() {
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
random_scheme=$(ls $PREFIX/share/Theme-Engine/colors | shuf -n 1)
{ cp $PREFIX/share/Theme-Engine/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings | printf "${Bgreen}  [i] Color-Scheme Reloading...                     \e[0m\r"
printf "${Bgreen}  [√] Random-Color-Scheme Applied Successfully      \e[0m";echo; exit;}
else
random_scheme=$(ls $HOME/.termux/colors | shuf -n 1)
{ cp $HOME/.termux/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings | printf "${Bgreen}  [i] Color-Scheme Reloading...                     \e[0m\r"
printf "${Bgreen}  [√] Random-Color-Scheme Applied Successfully      \e[0m";echo; exit;} ;fi ;}

exit_on_signal_SIGINT () {
   { printf "\n\e[0;1;48;2;200;0;0m                Program interrupted.                \e[0m" 2+&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

exit_on_signal_SIGTSTP () {
    { printf "\n\e[0;1;48;2;200;0;0m                Program terminated.                 \e[0m" 2+&1; echo; }
    echo -ne "\033]12;#b4e1fd\007"
    exit 0
}

trap exit_on_signal_SIGINT SIGINT ; trap exit_on_signal_SIGTSTP SIGTSTP

banner() {
echo -ne "\033]12;#363636\007";clear
echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ [01] accent.material [21] colors.light           ┃
\e[0;1m┃ [02] apathy.dark     [22] dracula.colors         ┃
\e[0;1m┃ [03] apathy.light    [23] default-dark.colors    ┃
\e[0;1m┃ [04] argonaut.colors [24] default-light.colors   ┃
\e[0;1m┃ [05] ashes.dark      [25] eighties-dark.colors   ┃
\e[0;1m┃ [06] ashes.light     [26] eighties-light.colors  ┃
\e[0;1m┃ [07] forest.dark     [27] embers-dark.colors     ┃
\e[0;1m┃ [08] forest.light    [28] embers-light.colors    ┃
\e[0;1m┃ [09] heath.dark      [29] e-ink.colors           ┃
\e[0;1m┃ [10] heath.light     [30] flat-dark.colors       ┃
\e[0;1m┃ [11] ${Fyellow}import.local    \e[0;1m[31] ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.dark.colors     \e[0;1m┃
\e[0;1m┃ [12] ${Fsky}import.online   \e[0;1m[32] ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.light.colors    \e[0;1m┃
\e[0;1m┃ [13] lakeside.dark   [33] flat-light.colors      ┃
\e[0;1m┃ [14] lakeside-light  [34] gnometerm.colors       ┃
\e[0;1m┃ [15] seaside-dark    [35] gotham.colors          ┃
\e[0;1m┃ [16] seaside.light   [36] greenscreen.dark       ┃
\e[0;1m┃ [17] black-on-white  [37] greenscreen.light      ┃
\e[0;1m┃ [18] codeschool.dark [38] gruvbox-dark.colors    ┃
\e[0;1m┃ [19] codeschool.light[39] gruvbox-light.colors   ┃
\e[0;1m┃ [20] colors.dark     [40] white-on-black.colors  ┃
\e[0;1m┃ [RC] ${Fgreen}random.colors   \e[0;1m[2+] Next Page              ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner2() {
echo -ne "\033]12;#363636\007";clear
echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ [41] harmonic16.dark [61] isotope-dark.colors    ┃
\e[0;1m┃ [42] harmonic16.light[62] isotope-light.colors   ┃
\e[0;1m┃ [42] londontube.dark [64] paraiso-dark.colors    ┃
\e[0;1m┃ [44] londontube.light[64] paraiso-light.colors   ┃
\e[0;1m┃ [45] marrakesh.dark  [65] rydgel.colors          ┃
\e[0;1m┃ [46] marrakesh.light [66] shapeshifter.dark      ┃
\e[0;1m┃ [47] materia.colors  [67] shapeshifter.light     ┃
\e[0;1m┃ [48] material.colors [68] smyck.colors           ┃
\e[0;1m┃ [49] material.dark   [69] solarized-dark.colors  ┃
\e[0;1m┃ [50] material.light  [70] solarized-loght.colors ┃
\e[0;1m┃ [51] mocha.dark      [71] spacemacs.colors       ┃
\e[0;1m┃ [52] mocha.light     [72] summerfruit.dark       ┃
\e[0;1m┃ [53] monokai.dark    [73] summerfruit.light      ┃
\e[0;1m┃ [54] monokai.light   [74] tomorrow-dark.colors   ┃
\e[0;1m┃ [55] neon.colors     [75] tomorrow-light.colors  ┃
\e[0;1m┃ [56] nord.colors     [76] tomorrow-night.colors  ┃
\e[0;1m┃ [57] ocean.dark      [77] twilight-dark.colors   ┃
\e[0;1m┃ [58] ocean.light     [78] twilight-light.colors  ┃
\e[0;1m┃ [59] one-dark.colors [79] wild-cherry.colors     ┃
\e[0;1m┃ [60] one-light.colors[80] zenburn.colors         ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner
printf "${Bwhite}  [i] Choose an Color Scheme :                      \e[0m"
PUT 31 32
printf "${Bwhite}"
read color
printf "\e[0m"
echo -ne "\033]12;#00E676\007"
if [[ $color = "1" ]] || [[ $color = "01" ]];then
preview $C1
change_loc
cp $C1 $HOME/.termux/colors.properties
change_col $C1

elif [[ $color = "2" ]] || [[ $color = "02" ]];then
preview $C2
change_loc
cp $C2 $HOME/.termux/colors.properties
change_col $C2

elif [[ $color = "3" ]] || [[ $color = "03" ]];then
preview $C3
change_loc
cp $C3 $HOME/.termux/colors.properties
change_col $C3

elif [[ $color = "4" ]] || [[ $color = "04" ]];then
preview $C4
change_loc
cp $C4 $HOME/.termux/colors.properties
change_col $C4

elif [[ $color = "5" ]] || [[ $color = "05" ]];then
preview $C5
change_loc
cp $C5 $HOME/.termux/colors.properties
change_col $C5

elif [[ $color = "6" ]] || [[ $color = "06" ]];then
preview $C6
change_loc
cp $C6 $HOME/.termux/colors.properties
change_col $C6

elif [[ $color = "7" ]] || [[ $color = "07" ]];then
preview $C7
change_loc
cp $C7 $HOME/.termux/colors.properties
change_col $C7

elif [[ $color = "8" ]] || [[ $color = "08" ]];then
preview $C8
change_loc
cp $C8 $HOME/.termux/colors.properties
change_col $C8

elif [[ $color = "9" ]] || [[ $color = "09" ]];then
preview $C9
change_loc
cp $C9 $HOME/.termux/colors.properties
change_col $C9

elif [[ $color = "10" ]];then
change_loc
cp $C10 $HOME/.termux/colors.properties
change_col $C10

elif [[ $color = "11" ]];then
printf "${Byellow}  [*] Enter Color Path :                            \e[0m"
PUT 32 26
printf "${Byellow}"
read -s path
if [ -f "$path" ];then
cp $path $HOME/.termux/colors.properties &> /dev/null
PUT 32 26
HIDCRSR
printf "/data/data/com.termux/files"
termux-reload-settings
printf "\n\e[0;1;7m  [√] Color-Scheme Applied Successfully             \e[0m";echo
NORM
else
echo -e "\n\e[0;1;7m                Invalid file format !               \e[0m"
echo -ne "\033]12;#b4e1fd\007"
fi

elif [[ $color = "12" ]];then
spin () {

local pid=$!
local delay=0.25
local spinner=( '' '.' '..' '...' )

while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do

for i in "${spinner[@]}"
do
	HIDCRSR
        PUT 32 1
        printf "${Bsky}                                                    "
	echo -ne "\e[1m\r  [⬇] Color Scheme Downloading$i";
	sleep $delay
        printf "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b";
done
done
termux-reload-settings;NORM
printf "\e[0;1;7m  [√] Color-Scheme Applied Successfully             \e[0m";echo

}

printf "${Bsky}  [*] Enter Url of ColorSheme :                     \e[0m"
PUT 32 33
read -s color_url
if [[ $color_url = https* ]];then
PUT 32 33
HIDCRSR;printf "${Bsky}https://************\e[0m\n"
sleep 0.6
trap '' 2
( wget -O $HOME/.termux/colors.properties $color_url -q &> /dev/null ) &> /dev/null & spin
trap 5
else
echo -e "\n\e[0;1;7m             You entered Invalid Url !              "
echo -ne "\033]12;#b4e1fd\007"
exit
fi

elif [[ $color = "rc" ]] || [[ $color = "RC" ]];then
#change_loc
#term
#cp "random_colors" $HOME/.termux/colors.properties
#
#change_col
random_colors

elif [[ $color = "13" ]];then
preview $C13
change_loc
cp atelierlakeside-dark.colors $HOME/.termux/colors.properties
change_col $C13

elif [[ $color = "14" ]];then
preview $C14
change_loc
cp atelierlakeside-light.colors $HOME/.termux/colors.properties
change_col $C14

elif [[ $color = "15" ]];then
preview $C15
change_loc
cp atelierseaside-dark.colors $HOME/.termux/colors.properties
change_col $C15

elif [[ $color = "16" ]];then
preview $C16
change_loc
cp atelierseaside-light.colors $HOME/.termux/colors.properties
change_col $C16

elif [[ $color = "17" ]];then
preview $C17
change_loc
cp black-on-white.colors $HOME/.termux/colors.properties
change_col $C17

elif [[ $color = "18" ]];then
preview $C18
change_loc
cp codeschool-dark.colors $HOME/.termux/colors.properties
change_col $C18

elif [[ $color = "19" ]];then
preview $C19
change_loc
cp codeschool-light.colors $HOME/.termux/colors.properties
change_col $C19

elif [[ $color = "20" ]];then
preview $C20
change_loc
cp colors-dark.colors $HOME/.termux/colors.properties
change_col $C20

elif [[ $color = "21" ]];then
preview $C21
change_loc
cp colors-light.colors $HOME/.termux/colors.properties
change_col $C21

elif [[ $color = "22" ]];then
preview $C22
change_loc
cp dracula.colors $HOME/.termux/colors.properties
change_col $C22

elif [[ $color = "23" ]];then
preview $C23
change_loc
cp default-dark.colors $HOME/.termux/colors.properties
change_col $C23

elif [[ $color = "24" ]];then
preview $C24
change_loc
cp default-light.colors $HOME/.termux/colors.properties
change_col $C24

elif [[ $color = "25" ]];then
preview $C25
change_loc
cp eighties-dark.colors $HOME/.termux/colors.properties
change_col $C25

elif [[ $color = "26" ]];then
preview $C26
change_loc
cp eighties-light.colors $HOME/.termux/colors.properties
change_col $C26

elif [[ $color = "27" ]];then
preview $C27
change_loc
cp embers-dark.colors $HOME/.termux/colors.properties
change_col $C27

elif [[ $color = "28" ]];then
preview $C28
change_loc
cp embers-light.colors $HOME/.termux/colors.properties
change_col $C28

elif [[ $color = "29" ]];then
preview $C29
change_loc
cp e-ink.colors $HOME/.termux/colors.properties
change_col $C29

elif [[ $color = "30" ]];then
preview $C30
change_loc
cp flat-dark.colors $HOME/.termux/colors.properties
change_col $C30

elif [[ $color = "31" ]];then
preview $C31
change_loc
cp google-dark.colors $HOME/.termux/colors.properties
change_col $C31

elif [[ $color = "32" ]];then
preview $C32
change_loc
cp google-light.colors $HOME/.termux/colors.properties
change_col $C32

elif [[ $color = "33" ]];then
preview $C33
change_loc
cp flat-light.colors $HOME/.termux/colors.properties
change_col $C33

elif [[ $color = "34" ]];then
preview $C34
change_loc
cp gnometerm.colors $HOME/.termux/colors.properties
change_col $C34

elif [[ $color = "35" ]];then
preview $C35
change_loc
cp gotham.colors $HOME/.termux/colors.properties
change_col $C35

elif [[ $color = "36" ]];then
preview $C36
change_loc
cp greenscreen-dark.colors $HOME/.termux/colors.properties
change_col $C36

elif [[ $color = "37" ]];then
preview $C37
change_loc
cp greenscreen-light.colors $HOME/.termux/colors.properties
change_col $C37

elif [[ $color = "38" ]];then
preview $C38
change_loc
cp gruvbox-dark.colors $HOME/.termux/colors.properties
change_col $C38

elif [[ $color = "39" ]];then
preview $C39
change_loc
cp gruvbox-light.colors $HOME/.termux/colors.properties
change_col $C39

elif [[ $color = "40" ]];then
preview $C40
change_loc
cp white-on-black.colors $HOME/.termux/colors.properties
change_col $C40

elif [[ $color = "2+" ]];then
banner2
printf "${Bwhite}  [i] Choose an Color Scheme :                      \e[0m"
PUT 30 32
printf "${Bwhite}"
read color
printf "\e[0m"
echo -ne "\033]12;#00E676\007"

if [[ $color = "41" ]];then
preview $C41
change_loc
cp harmonic16-dark.colors $HOME/.termux/colors.properties
change_col $C41

elif [[ $color = "42" ]];then
preview $C42
change_loc
cp harmonic16-light.colors $HOME/.termux/colors.properties
change_col $C42

elif [[ $color = "43" ]];then
preview $C43
change_loc
cp isotope-dark.colors $HOME/.termux/colors.properties
change_col $C43

elif [[ $color = "44" ]];then
preview $C44
change_loc
cp londontube-light.colors $HOME/.termux/colors.properties
change_col $C44

elif [[ $color = "45" ]];then
preview $C45
change_loc
cp marrakesh-dark.colors $HOME/.termux/colors.properties
change_col $C45

elif [[ $color = "46" ]];then
preview $C46
change_loc
cp marrakesh-light.colors $HOME/.termux/colors.properties
change_col $C46

elif [[ $color = "47" ]];then
preview $C47
change_loc
cp materia.colors $HOME/.termux/colors.properties
change_col $C47

elif [[ $color = "48" ]];then
preview $C48
change_loc
cp material.colors $HOME/.termux/colors.properties
change_col $C48

elif [[ $color = "49" ]];then
preview $C49
change_loc
cp material.dark.colors $HOME/.termux/colors.properties
change_col $C49

elif [[ $color = "50" ]];then
preview $C50
change_loc
cp material.light.colors $HOME/.termux/colors.properties
change_col $C50

elif [[ $color = "51" ]];then
preview $C51
change_loc
cp mocha-dark.colors $HOME/.termux/colors.properties
change_col $C51

elif [[ $color = "52" ]];then
preview $C52
change_loc
cp mocha-light.colors $HOME/.termux/colors.properties
change_col $C52

elif [[ $color = "53" ]];then
preview $C53
change_loc
cp monokai-dark.colors $HOME/.termux/colors.properties
change_col $C53

elif [[ $color = "54" ]];then
preview $C54
change_loc
cp monokai-light.colors $HOME/.termux/colors.properties
change_col $C

elif [[ $color = "55" ]];then
preview $C55
change_loc
cp neon.colors $HOME/.termux/colors.properties
change_col $C55

elif [[ $color = "56" ]];then
preview $C56
change_loc
cp nord.colors $HOME/.termux/colors.properties
change_col $C56

elif [[ $color = "57" ]];then
preview $C57
change_loc
cp ocean-dark.colors $HOME/.termux/colors.properties
change_col $C57

elif [[ $color = "58" ]];then
preview $C58
change_loc
cp ocean-light.colors $HOME/.termux/colors.properties
change_col $C58

elif [[ $color = "59" ]];then
preview $C59
change_loc
cp one-dark.colors $HOME/.termux/colors.properties
change_col $C59

elif [[ $color = "60" ]];then
preview $C60
change_loc
cp one-light.colors $HOME/.termux/colors.properties
change_col $C60

elif [[ $color = "61" ]];then
preview $C61
change_loc
cp isotope-dark.colors $HOME/.termux/colors.properties
change_col $C61

elif [[ $color = "62" ]];then
preview $C62
change_loc
cp londontube-light.colors $HOME/.termux/colors.properties
change_col $C62

elif [[ $color = "63" ]];then
preview $C63
change_loc
cp paraiso-dark.colors $HOME/.termux/colors.properties
change_col $C63

elif [[ $color = "64" ]];then
preview $C64
change_loc
cp paraiso-light.colors $HOME/.termux/colors.properties
change_col $C64

elif [[ $color = "65" ]];then
preview $C65
change_loc
cp rydgel.colors $HOME/.termux/colors.properties
change_col $C65

elif [[ $color = "66" ]];then
preview $C66
change_loc
cp shapeshifter-dark.colors $HOME/.termux/colors.properties
change_col $C66

elif [[ $color = "67" ]];then
preview $C67
change_loc
cp shapeshifter-light.colors $HOME/.termux/colors.properties
change_col $C67

elif [[ $color = "68" ]];then
preview $C68
change_loc
cp smyck.colors $HOME/.termux/colors.properties
change_col $C68

elif [[ $color = "69" ]];then
preview $C69
change_loc
cp solarized-dark.colors $HOME/.termux/colors.properties
change_col $C69

elif [[ $color = "70" ]];then
preview $C70
change_loc
cp solarized-light.colors $HOME/.termux/colors.properties
change_col $C70

elif [[ $color = "71" ]];then
preview $C71
change_loc
cp spacemacs.colors $HOME/.termux/colors.properties
change_col $C71

elif [[ $color = "72" ]];then
preview $C72
change_loc
cp summerfruit-dark.colors $HOME/.termux/colors.properties
change_col $C72

elif [[ $color = "73" ]];then
preview $C73
change_loc
cp summerfruit-light.colors $HOME/.termux/colors.properties
change_col $C73

elif [[ $color = "74" ]];then
preview $C74
change_loc
cp tomorrow-dark.colors $HOME/.termux/colors.properties
change_col $C74

elif [[ $color = "75" ]];then
preview $C75
change_loc
cp $C75 $HOME/.termux/colors.properties
change_col $C75

elif [[ $color = "76" ]];then
preview $C76
change_loc
cp $C76 $HOME/.termux/colors.properties
change_col $C76

elif [[ $color = "77" ]];then
preview $C77
change_loc
cp $C77 $HOME/.termux/colors.properties
change_col $C77

elif [[ $color = "78" ]];then
preview $C78
change_loc
cp $C78 $HOME/.termux/colors.properties
change_col $C78

elif [[ $color = "79" ]];then
preview $C79
change_loc
cp $C79 $HOME/.termux/colors.properties
change_col $C79

elif [[ $color = "80" ]];then
preview $C80
change_loc
cp $C80 $HOME/.termux/colors.properties
change_col $C80

else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
# Thanks for uaing Theme-Engine.
