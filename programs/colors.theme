#!/usr/bin/bash

PUT(){ echo -en "\033[${1};${2}H";}
HIDCRSR(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}

## colors
# foreground
Fgreen=$'\e[0;1;38;2;0;230;118m'   Fblue=$'\e[0;1;38;2;40;90;255m'   Fsky=$'\e[0;1;38;2;0;255;255m'
Fpurple=$'\e[0;1;38;2;101;31;255m' Fyellow=$'\e[0;1;38;2;200;255;0m' Fred=$'\e[0;1;38;2;200;0;0m' Bcyan=$'\e[0;1;38;5;49m'
# background
Bgreen=$'\e[0;1;30;48;2;0;230;118m'   Bblue=$'\e[0;1;48;2;40;90;255m'   Bsky=$'\e[0;1;30;48;2;0;255;255m'
Bpurple=$'\e[0;1;48;2;101;31;255m' Byellow=$'\e[0;1;30;48;2;200;255;0m' Bred=$'\e[0;1;48;2;200;0;0m' Bcyan=$'\e[0;1;30;48;5;49m'
# google
G=$'\e[0;1;38;2;60;186;84m' Y=$'\e[0;1;38;2;244;194;13m'
R=$'\e[0;1;38;2;219;50;54m' B=$'\e[0;1;38;2;72;133;237m'
## Reset Colors
C=$'\e[0;1m'

if [ ! -d "$HOME/.termux" ];then cd $HOME ; mkdir .termux ;fi

change_loc() {
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
cd $PREFIX/share/Theme-Engine/colors
else
cd $HOME/.termux/colors
fi
}

change_col() {
termux-reload-settings | printf "\e[0;1;7m  [i] Color-Scheme Reloading...                     \e[0m\r"
printf "\e[0;1;7m  [√] Color-Scheme Applied Successfully             \e[0m\n"
}

random_colors() {
if [ ! -f "$HOME/.termux/config.theme-engine" ];then
random_scheme=$(ls $PREFIX/share/Theme-Engine/colors | shuf -n 1)
{ cp $PREFIX/share/Theme-Engine/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings; printf "\e[0;1;7m [√] Random-Color-Scheme Applied Successfully       \e[0m";echo; exit;}
else
random_scheme=$(ls $HOME/.termux/colors | shuf -n 1)
{ cp $HOME/.termux/colors/$random_scheme $HOME/.termux/colors.properties;}
{ termux-reload-settings; printf "\e[0;1;7m [√] Random-Color-Scheme Applied Successfully       \e[0m";echo; exit;} ;fi ;}


trap exit_on_signal_SIGINT SIGINT ; trap exit_on_signal_SIGTERM SIGTERM

banner() {
clear;echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ [01] accent.material [21] colors.light           ┃
\e[0;1m┃ [02] apathy.dark     [22] dracula.colors         ┃
\e[0;1m┃ [03] apathy.light    [23] default-dark.colors    ┃
\e[0;1m┃ [04] argonaut.colors [24] default-light.colors   ┃
\e[0;1m┃ [05] ashes.dark      [25] eighties-dark.colors   ┃
\e[0;1m┃ [06] ashes.light     [26] eighties-light.colors  ┃
\e[0;1m┃ [07] forest.dark     [27] embers-dark.colors     ┃
\e[0;1m┃ [08] forest.light    [28] embers-light.colors    ┃
\e[0;1m┃ [09] heath.dark      [29] e-ink.colors           ┃
\e[0;1m┃ [10] heath.light     [30] flat-dark.colors       ┃
\e[0;1m┃ [11] ${Fyellow}import.local    \e[0;1m[31] ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.dark.colors     \e[0;1m┃
\e[0;1m┃ [12] ${Fsky}import.online   \e[0;1m[32] ${B}g${R}o${Y}o${B}g${G}l${R}e${Y}${C}.light.colors    \e[0;1m┃
\e[0;1m┃ [13] lakeside.dark   [33] flat-light.colors      ┃
\e[0;1m┃ [14] lakeside-light  [34] gnometerm.colors       ┃
\e[0;1m┃ [15] seaside-dark    [35] gotham.colors          ┃
\e[0;1m┃ [16] seaside.light   [36] greenscreen.dark       ┃
\e[0;1m┃ [17] black-on-white  [37] greenscreen.light      ┃
\e[0;1m┃ [18] codeschool.dark [38] gruvbox-dark.colors    ┃
\e[0;1m┃ [19] codeschool.light[39] gruvbox-light.colors   ┃
\e[0;1m┃ [20] colors.dark     [40] white-on-black.colors  ┃
\e[0;1m┃ [RC] ${Fgreen}random.colors   \e[0;1m[2>] Next Page              ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner2() {
clear;echo -e "
\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃${Fgreen}          ┏━╸┏━┓╻  ┏━┓┏━┓   ┏┳┓┏━╸┏┓╻╻ ╻          \e[0;1m┃
\e[0;1m┃${Fgreen}          ┃  ┃ ┃┃  ┃ ┃┣┳┛╺━╸┃┃┃┣╸ ┃┗┫┃ ┃   	   \e[0;1m┃
\e[0;1m┃${Fgreen}          ┗━╸┗━┛┗━╸┗━┛╹┗╸   ╹ ╹┗━╸╹ ╹┗━┛          \e[0;1m┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

\e[0;1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
\e[0;1m┃ [41] harmonic16.dark [61] isotope-dark.colors    ┃
\e[0;1m┃ [42] harmonic16.light[62] isotope-dark.colors    ┃
\e[0;1m┃ [42] londontube.dark [64] paraiso-dark.colors    ┃
\e[0;1m┃ [44] londontube.light[64] paraiso-light.colors   ┃
\e[0;1m┃ [45] marrakesh.dark  [65] rydgel.colors          ┃
\e[0;1m┃ [46] marrakesh.light [66] shapeshifter.dark      ┃
\e[0;1m┃ [47] materia.colors  [67] shapeshifter.light     ┃
\e[0;1m┃ [48] material.colors [68] smyck.colors           ┃
\e[0;1m┃ [49] material.dark   [69] solarized-dark.colors  ┃
\e[0;1m┃ [50] material.light  [70] solarized-loght.colors ┃
\e[0;1m┃ [51] mocha.dark      [71] spacemacs.colors       ┃
\e[0;1m┃ [52] mocha.light     [72] summerfruit.dark       ┃
\e[0;1m┃ [53] monokai.dark    [73] summerfruit.light      ┃
\e[0;1m┃ [54] monokai.light   [74] tomorrow-dark.colors   ┃
\e[0;1m┃ [55] neon.colors     [75] tomorrow-light.colors  ┃
\e[0;1m┃ [56] nord.colors     [76] tomorrow-night.colors  ┃
\e[0;1m┃ [57] ocean.dark      [77] twilight-dark.colors   ┃
\e[0;1m┃ [58] ocean.light     [78] twilight-light.colors  ┃
\e[0;1m┃ [59] one-dark.colors [79] wild-cherry.colors     ┃
\e[0;1m┃ [60] one-light.colors[80] zenburn.colors         ┃
\e[0;1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛";}

banner
printf "${Bgreen}  [i] Choose an Color Scheme :                      \e[0m"
PUT 31 32
printf "${Bgreen}"
read color
printf "\e[0m"
if [[ $color = "1" ]] || [[ $color = "01" ]];then
change_loc
cp accent.material.colors $HOME/.termux/colors.properties
change_col


elif [[ $color = "2" ]] || [[ $color = "02" ]];then
change_loc
cp apathy-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "3" ]] || [[ $color = "03" ]];then
change_loc
cp apathy-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "4" ]] || [[ $color = "04" ]];then
change_loc
cp argonaut.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "5" ]] || [[ $color = "05" ]];then
change_loc
cp ashes-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "6" ]] || [[ $color = "06" ]];then
change_loc
cp ashes-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "7" ]] || [[ $color = "07" ]];then
change_loc
cp atelierforest-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "8" ]] || [[ $color = "08" ]];then
change_loc
cp atelierforest-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "9" ]] || [[ $color = "09" ]];then
change_loc
cp atelierheath-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "10" ]];then
change_loc
cp atelierheath-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "11" ]];then
printf "${Byellow} [*] Enter Color Path :                             \e[0m"
PUT 34 25
printf "${Byellow}"
read -s path
if [ -f "$path" ];then
cp $path $HOME/.termux/colors.properties &> /dev/null
PUT 34 25
HIDCRSR
printf "/data/data/com.termux/files"
termux-reload-settings
printf "\n\e[0;1;7m [√] Color-Scheme Applied Successfully              \e[0m";echo
NORM
else
echo -e "\n\e[0;1;7m                Invalid file format !               \e[0m"
echo -ne "\033]12;#b4e1fd\007"
fi

elif [[ $color = "12" ]];then
spin () {

local pid=$!
local delay=0.25
local spinner=( '' '.' '..' '...' )

while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do

for i in "${spinner[@]}"
do
	HIDCRSR
        PUT 34 1
        printf "${Bsky}                                                    "
	echo -ne "\e[1m\r [⬇] Color Scheme Downloading$i";
	sleep $delay
        printf "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b";
done
done
termux-reload-settings;NORM
printf "\e[0;1;7m [√] Color-Scheme Applied Successfully              \e[0m";echo

}

printf "${Bsky} [*] Enter Url of ColorSheme :                      \e[0m"
PUT 34 32
read -s color_url
if [[ $color_url = https* ]];then
PUT 34 32
HIDCRSR;printf "${Bsky}https://************\e[0m\n"
sleep 0.6
trap '' 2
( wget -O $HOME/.termux/colors.properties $color_url -q &> /dev/null ) &> /dev/null & spin
trap 5
else
echo -e "\n\e[0;1;7m             You entered Invalid Url !              "
echo -ne "\033]12;#b4e1fd\007"
exit
fi

elif [[ $color = "rc" ]] || [[ $color = "RC" ]];then
#change_loc
#term
#cp "random_colors" $HOME/.termux/colors.properties
#
#change_col
random_colors

elif [[ $color = "13" ]];then
change_loc
cp atelierlakeside-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "14" ]];then
change_loc
cp atelierlakeside-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "15" ]];then
change_loc
cp atelierseaside-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "16" ]];then
change_loc
cp atelierseaside-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "17" ]];then
change_loc
cp black-on-white.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "18" ]];then
change_loc
cp codeschool-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "19" ]];then
change_loc
cp codeschool-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "20" ]];then
change_loc
cp colors-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "21" ]];then
change_loc
cp colors-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "22" ]];then
change_loc
cp dracula.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "23" ]];then
change_loc
cp default-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "24" ]];then
change_loc
cp default-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "25" ]];then
change_loc
cp eighties-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "26" ]];then
change_loc
cp eighties-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "27" ]];then
change_loc
cp embers-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "28" ]];then
change_loc
cp embers-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "29" ]];then
change_loc
cp e-ink.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "30" ]];then
change_loc
cp flat-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "31" ]];then
change_loc
cp google-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "32" ]];then
change_loc
cp google-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "33" ]];then
change_loc
cp flat-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "34" ]];then
change_loc
cp gnometerm.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "35" ]];then
change_loc
cp gotham.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "36" ]];then
change_loc
cp greenscreen-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "37" ]];then
change_loc
cp greenscreen-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "38" ]];then
change_loc
cp gruvbox-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "39" ]];then
change_loc
cp gruvbox-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "40" ]];then
change_loc
cp white-on-black.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "2>" ]];then
banner2
printf "${Bgreen}  [!] Choose an Color Scheme :                      \e[0m"
PUT 30 32
printf "${Bgreen}"
read color
printf "\e[0m"

if [[ $color = "41" ]];then
change_loc
cp harmonic16-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "42" ]];then
change_loc
cp harmonic16-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "43" ]];then
change_loc
cp isotope-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "44" ]];then
change_loc
cp londontube-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "45" ]];then
change_loc
cp marrakesh-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "46" ]];then
change_loc
cp marrakesh-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "47" ]];then
change_loc
cp materia.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "48" ]];then
change_loc
cp material.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "49" ]];then
change_loc
cp material.dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "50" ]];then
change_loc
cp material.light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "51" ]];then
change_loc
cp mocha-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "52" ]];then
change_loc
cp mocha-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "53" ]];then
change_loc
cp monokai-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "54" ]];then
change_loc
cp monokai-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "55" ]];then
change_loc
cp neon.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "56" ]];then
change_loc
cp nord.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "57" ]];then
change_loc
cp ocean-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "58" ]];then
change_loc
cp ocean-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "59" ]];then
change_loc
cp one-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "60" ]];then
change_loc
cp one-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "61" ]];then
change_loc
cp isotope-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "62" ]];then
change_loc
cp londontube-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "63" ]];then
change_loc
cp paraiso-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "64" ]];then
change_loc
cp paraiso-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "65" ]];then
change_loc
cp rydgel.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "66" ]];then
change_loc
cp shapeshifter-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "67" ]];then
change_loc
cp shapeshifter-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "68" ]];then
change_loc
cp smyck.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "69" ]];then
change_loc
cp solarized-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "70" ]];then
change_loc
cp solarized-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "71" ]];then
change_loc
cp spacemacs.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "72" ]];then
change_loc
cp summerfruit-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "73" ]];then
change_loc
cp summerfruit-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "74" ]];then
change_loc
cp tomorrow-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "75" ]];then
change_loc
cp tomorrow-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "76" ]];then
change_loc
cp tomorrow-night.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "77" ]];then
change_loc
cp twilight-dark.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "78" ]];then
change_loc
cp twilight-light.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "79" ]];then
change_loc
cp wild-cherry.colors $HOME/.termux/colors.properties
change_col

elif [[ $color = "80" ]];then
change_loc
cp zenburn.colors $HOME/.termux/colors.properties
change_col

else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
else echo -e "\e[0;1;100m             You entered Wrong Input !              \e[0m";echo;echo -ne "\033]12;#b4e1fd\007" ;fi
# Thanks for uaing Theme-Engine.
