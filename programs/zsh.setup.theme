#!/usr/bin/bash

#..............................................................

                       THEME='default'

#..............................................................

PUT(){ echo -en "\033[${1};${2}H";}
HIDE(){ echo -en "\033[?25l";}
NORM(){ echo -en "\033[?12l\033[?25h";}
SLP() { sleep 0.03 ;}
## color
# bg color
Bpurple='\e[0;1;48;2;101;31;255m'
NBpurple='\e[0;1;90;7;48;2;200;50;255m'

## distro
distroA=$(uname -o | grep -o "Android")
distroB=$(uname -o | grep -o "Linux")

## Specify time
day=`date +%H`
night=`date +%H`

## file names
N0="Theme-Engine" N1="theme-engine"
N2="colors"       N3="fonts" N4="programs"
N5="Terminus.ttf" N6="fonts.rar"
N7="termux.properties" N8="config.theme-engine"
N9=".oh-my-zsh"  N10="disable.zsh.theme"
N11="unrar.theme" N12="zsh.setup.theme"
N13="highlight.features.theme" N14=".zshrc"
N15=".zsh-autosuggestions/zsh-autosuggestions.zsh"
N16=".zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

## directory names
D0="/usr/share" D1="share"
D2="program"    D3=".termux"
D4=".kali"      D5="bin"
D6="/home/kali" D7="/bin"

## directory
directoriesA() {
PREFIX="/data/data/com.termux/files/usr" PDIR="${PREFIX}/${D1}/${N0}"
loc1="${PDIR}/${N2}"         loc2="${PDIR}/${N3}"
loc3="${PDIR}/${N4}"         loc4="${PDIR}/${N3}/${N5}"
loc5="${PDIR}/${N3}/${N6}"   loc6="${HOME}/${D3}/${N7}"
loc7="${HOME}/${D3}"         loc8="${HOME}/${D3}/${N8}"
loc9="${PDIR}"               loc10="${PDIR}/${N14}"
loc11="${PDIR}/${N9}"        loc12="${PDIR}/${N1}"
loc13="${HOME}/${N15}"       loc14="${HOME}/${N16}"
loc15="$HOME"                loc16="${D3}"
}

directoriesB() {
PREFIX="/usr"                UDIR="${D0}/${N0}"
loc1="${UDIR}/${N2}"         loc2="${UDIR}/${N3}"
loc3="${UDIR}/${N4}"         loc4="${UDIR}/${N3}/${N5}"
loc5="${UDIR}/${N3}/${N6}"   loc6="${D6}/${D4}/${N7}"
loc7="${D6}/${D4}"           loc8="${D6}/${D4}/${N8}"
loc9="${UDIR}"               loc10="${UDIR}/${N14}"
loc11="${UDIR}/${N9}"        loc12="${UDIR}/${N1}"
loc13="${D6}/${N15}"         loc14="${D6}/${N16}"
loc15="${D6}"                loc16="${D4}"
}


if [[ $distroA == *'Android'* ]]; then
directoriesA

elif [[ $distroB == *'Linux'* ]]; then
directoriesB
else echo "Theme-Engine isn't supported you're system."
exit
fi

setting_up() {
if [ ! -d "${loc7}" ];then cd $loc15 ; mkdir ${loc16} ;fi
if [ ! -f "${loc8}" ];then
cd ${loc7}; touch config.theme-engine ;fi
if [ -d "${loc7}/colors.properties" ];then cd $loc15 ; rm ${loc7}/colors.properties ;fi
if [ -d "${loc7}/font.ttf" ];then cd $loc15 ; rm $loc15/font.ttf ;fi ;}

set_color() {
cd ${loc9}/colors
cp accent.material.colors colors.properties
mv colors.properties ${loc7} ; }
set_font() {
cd ${loc9}/fonts
cp  'Anonymice Powerline.ttf' font.ttf
mv font.ttf ${loc7} ; }

copying_files() {
cd ${loc9}
cp -rf colors fonts ${loc7} ; }

files() {
if [ -f "$loc15/.zshrc" ];then cd $loc15 ; rm .zshrc ;fi
if [ -d "$loc15/.oh-my-zsh" ];then cd $loc15 ;rm -rf .oh-my-zsh ;fi
if [ ! -d "$loc15/.oh-my-zsh" ];then
cd ${loc9}
cp -rf .oh-my-zsh $loc15 ;fi ;}

copying_tools() {
cd ${loc9}/programs
cp fonts.theme ${loc7}
cp colors.theme ${loc7}
cp zsh.theme ${loc7}
cp zsh.update ${loc7}
cd ${loc7} ; chmod +x fonts.theme colors.theme zsh.theme zsh.update ;}

change_shell() {
chsh -s zsh ;}

copying_plugins() {
if [ -d "$loc15/.zsh-syntax-highlighting" ];then cd $loc15 ; rm -rf .zsh-syntax-highlighting ;fi
if [ ! -d "$loc15/.zsh-syntax-highlighting" ];then
cd ${loc9}
cp -rf .zsh-autosuggestions $loc15
cp -rf .zsh-syntax-highlighting $loc15 ;fi ;}

reload() {
termux-reload-settings ;}

zshrc() {
if [[ $distroA == *'Android'* ]]; then
echo 'LS_THEME="lsd" # (New Gen LS = lsd) & (Old Gen LS = ls)' >> .zshrc
fi
echo '# If you come from bash you might have to change your $PATH.' >> .zshrc
echo '# export PATH=$HOME/bin:/usr/local/bin:$PATH' >> .zshrc
echo"" >> .zshrc
echo "# Path to your oh-my-zsh installation." >> .zshrc
echo 'export ZSH=$HOME/.oh-my-zsh' >> .zshrc
echo"" >> .zshrc
echo '# Set name of the theme to load --- if set to "random", it will' >> .zshrc
echo "# load a random theme each time oh-my-zsh is loaded, in which case," >> .zshrc
echo '# to know which specific one was loaded, run: echo $RANDOM_THEME' >> .zshrc
echo "# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" >> .zshrc
echo"" >> .zshrc
echo "# Set list of themes to pick from when loading at random" >> .zshrc
echo "# Setting this variable when ZSH_THEME=random will cause zsh to load" >> .zshrc
echo "# a theme from this variable instead of looking in $ZSH/themes/" >> .zshrc
echo "# If set to an empty array, this variable will have no effect." >> .zshrc
echo '# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to use case-sensitive completion." >> .zshrc
echo '# CASE_SENSITIVE="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to use hyphen-insensitive completion." >> .zshrc
echo "# Case-sensitive completion must be off. _ and - will be interchangeable." >> .zshrc
echo '# HYPHEN_INSENSITIVE="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to disable bi-weekly auto-update checks." >> .zshrc
echo '# DISABLE_AUTO_UPDATE="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to automatically update without prompting." >> .zshrc
echo '# DISABLE_UPDATE_PROMPT="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to change how often to auto-update (in days)." >> .zshrc
echo "# export UPDATE_ZSH_DAYS=13" >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line if pasting URLs and other text is messed up." >> .zshrc
echo '# DISABLE_MAGIC_FUNCTIONS="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to disable colors in ls." >> .zshrc
echo '# DISABLE_LS_COLORS="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to disable auto-setting terminal title." >> .zshrc
echo '# DISABLE_AUTO_TITLE="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to enable command auto-correction." >> .zshrc
echo '# ENABLE_CORRECTION="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line to display red dots whilst waiting for completion." >> .zshrc
echo '# COMPLETION_WAITING_DOTS="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line if you want to disable marking untracked files" >> .zshrc
echo "# under VCS as dirty. This makes repository status check for large repositories" >> .zshrc
echo "# much, much faster." >> .zshrc
echo '# DISABLE_UNTRACKED_FILES_DIRTY="true"' >> .zshrc
echo"" >> .zshrc
echo "# Uncomment the following line if you want to change the command execution time" >> .zshrc
echo "# stamp shown in the history command output." >> .zshrc
echo "# You can set one of the optional three formats:" >> .zshrc
echo '# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"' >> .zshrc
echo "# or set a custom format using the strftime function format specifications," >> .zshrc
echo "# see 'man strftime' for details." >> .zshrc
echo '# HIST_STAMPS="mm/dd/yyyy"' >> .zshrc
echo"" >> .zshrc
echo "# Would you like to use another custom folder than $ZSH/custom?" >> .zshrc
echo "# ZSH_CUSTOM=/path/to/new-custom-folder" >> .zshrc
echo"" >> .zshrc
echo "# Which plugins would you like to load?" >> .zshrc
echo "# Standard plugins can be found in $ZSH/plugins/" >> .zshrc
echo "# Custom plugins may be added to $ZSH_CUSTOM/plugins/" >> .zshrc
echo "# Example format: plugins=(rails git textmate ruby lighthouse)" >> .zshrc
echo "# Add wisely, as too many plugins slow down shell startup." >> .zshrc
echo "plugins=(git)" >> .zshrc
echo"" >> .zshrc
echo 'source $ZSH/oh-my-zsh.sh' >> .zshrc
echo"" >> .zshrc
echo "# User configuration" >> .zshrc
echo"" >> .zshrc
echo '# export MANPATH="/usr/local/man:$MANPATH"' >> .zshrc
echo"" >> .zshrc
echo "# You may need to manually set your language environment" >> .zshrc
echo "# export LANG=en_US.UTF-8" >> .zshrc
echo"" >> .zshrc
echo "# Preferred editor for local and remote sessions" >> .zshrc
echo "# if [[ -n $SSH_CONNECTION ]]; then" >> .zshrc
echo "#   export EDITOR='vim'" >> .zshrc
echo "# else" >> .zshrc
echo "#   export EDITOR='mvim'" >> .zshrc
echo "# fi" >> .zshrc
echo"" >> .zshrc
echo "# Compilation flags" >> .zshrc
echo '# export ARCHFLAGS="-arch x86_64"' >> .zshrc
echo"" >> .zshrc
echo "# Set personal aliases, overriding those provided by oh-my-zsh libs," >> .zshrc
echo "# plugins, and themes. Aliases can be placed here, though oh-my-zsh" >> .zshrc
echo "# users are encouraged to define aliases within the ZSH_CUSTOM folder." >> .zshrc
echo "# For a full list of active aliases, run `alias`." >> .zshrc
echo"" >> .zshrc
echo "# Example aliases" >> .zshrc
echo '# alias zshconfig="mate ~/.zshrc"' >> .zshrc
echo '# alias ohmyzsh="mate ~/.oh-my-zsh"' >> .zshrc
if [[ $distroA == *'Android'* ]]; then
echo 'alias ls="${LS_THEME}" # (New Gen LS = lsd) & (Old Gen LS = ls)' >> .zshrc
fi
echo "alias chcolor='${loc7}/colors.theme'" >> .zshrc
echo "alias chfont='${loc7}/fonts.theme'" >> .zshrc
echo "alias chtheme='${loc7}/zsh.theme'" >> .zshrc
echo "alias update='${loc7}/zsh.update'" >> .zshrc
echo "source ${loc13}" >> .zshrc
echo "source ${loc14}" >> .zshrc
if [[ $distroA == *'Android'* ]]; then
echo "if [[ -f '/data/data/com.termux/files/home/.termux/blink.cursor.theme' ]];then" >> .zshrc
echo "bash /data/data/com.termux/files/home/.termux/blink.cursor.theme" >> .zshrc
echo "fi" >> .zshrc
fi
}

set_zsh() {
if [ -f "${loc7}/config.theme-engine" ];then
cd $loc15 ;echo 'ZSH_THEME="agnoster"' > .zshrc ;fi ;}

night() { trap '' 2
PUT 15 1 ;HIDE
printf "\n\e[1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n";SLP
printf "\e[1m┃${NBpurple}             ╺━┓┏━┓╻ ╻   ┏━┓┏━╸╺┳╸╻ ╻┏━┓             \e[0m┃\n";SLP
printf "\e[1m┃${NBpurple}             ┏━┛┗━┓┣━┫╺━╸┗━┓┣╸  ┃ ┃ ┃┣━┛             \e[0m┃\n";SLP
printf "\e[1m┃${NBpurple}             ┗━╸┗━┛╹ ╹   ┗━┛┗━╸ ╹ ┗━┛╹               \e[0m┃\n";SLP
printf "\e[1m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫\n";SLP
printf "\e[1m┃                                                     ┃\n";SLP
printf "\e[1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n";SLP
PUT 21 1
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up configurations           [0.0%]  |   \r"
sleep 0.22
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up configurations.          [0.3%]  /   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up configurations..         [0.9%]  -   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up configurations...        [1.0%]  \   \r"
sleep 0.12
setting_up
echo -ne "\e[0;1m┃${NBpurple}  ✚  Changing default Shell to Zsh       [3.0%]  |   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Changing default Shell to Zsh.      [9.0%]  /   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Changing default Shell to Zsh..     [18%]   -   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Changing default Shell to Zsh...    [26%]   \   \r"
sleep 0.12
change_shell
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Color-Scheme.            [30%]   |   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Color-Scheme..           [34%]   /   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Color-Scheme...          [38%]   -   \r"
sleep 0.12
set_color
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Font-Style.              [42%]   \   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Font-Style..             [50%]   |   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Font-Style...            [56%]   /   \r"
sleep 0.12
set_font
echo -ne "\e[0;1m┃${NBpurple}  ✚  Copying Necessary files.            [62%]   -   \r"
sleep 0.12
copying_files
echo -ne "\e[0;1m┃${NBpurple}  ✚  Copying Necessary files..           [68%]   \   \r"
sleep 0.12
files
echo -ne "\e[0;1m┃${NBpurple}  ✚  Copying Necessary files...          [74%]   |   \r"
sleep 0.12
copying_tools
echo -ne "\e[0;1m┃${NBpurple}  ✚  Copying Zsh-Plugins...              [78%]   /   \r"
sleep 0.12
copying_plugins
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Zsh-Shell                [86%]   -   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Zsh-Shell.               [92%]   \   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Zsh-Shell..              [94%]   |   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Zsh-Theme...             [96%]   /   \r"
sleep 0.12
set_zsh
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setting-up Zsh-Shell...             [98%]   -   \r"
sleep 0.12
zshrc
echo -ne "\e[0;1m┃${NBpurple}  ✚  Reloading Configuration Settings... [99%]   \   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setup completed. Enjoy Oh-my-zsh    [100%]  |   \r"
sleep 0.12
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setup completed. Enjoy Oh-my-zsh    [100%]  /   \r"
reload
echo -ne "\e[0;1m┃${NBpurple}  ✚  Setup completed. Enjoy Oh-my-zsh    [100%]  -   \r"
trap 5; sleep 0.12; NORM
bash "$PREFIX/bin/theme-engine"
}

light() { trap '' 2
PUT 15 1 ;HIDE
printf "\n\e[1m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n";SLP
printf "\e[1m┃${Bpurple}             ╺━┓┏━┓╻ ╻   ┏━┓┏━╸╺┳╸╻ ╻┏━┓             \e[0m┃\n";SLP
printf "\e[1m┃${Bpurple}             ┏━┛┗━┓┣━┫╺━╸┗━┓┣╸  ┃ ┃ ┃┣━┛             \e[0m┃\n";SLP
printf "\e[1m┃${Bpurple}             ┗━╸┗━┛╹ ╹   ┗━┛┗━╸ ╹ ┗━┛╹               \e[0m┃\n";SLP
printf "\e[1m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫\n";SLP
printf "\e[1m┃                                                     ┃\n";SLP
printf "\e[1m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n";SLP
PUT 21 1
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up configurations           [0.0%]   |  \r"
sleep 0.22
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up configurations.          [0.3%]   /  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up configurations..         [0.9%]   -  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up configurations...        [1.0%]   \  \r"
sleep 0.12
setting_up
echo -ne "\e[0;1m┃${Bpurple}  ✚  Changing default Shell to Zsh       [3.0%]   |  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Changing default Shell to Zsh.      [9.0%]   /  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Changing default Shell to Zsh..     [18%]    -  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Changing default Shell to Zsh...    [26%]    \  \r"
sleep 0.12
change_shell
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Color-Scheme.            [30%]    |  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Color-Scheme..           [34%]    /  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Color-Scheme...          [38%]    -  \r"
sleep 0.12
set_color
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Font-Style.              [42%]    \  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Font-Style..             [50%]    |  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Font-Style...            [56%]    /  \r"
sleep 0.12
set_font
echo -ne "\e[0;1m┃${Bpurple}  ✚  Copying Necessary files.            [62%]    -  \r"
sleep 0.12
copying_files
echo -ne "\e[0;1m┃${Bpurple}  ✚  Copying Necessary files..           [68%]    \  \r"
sleep 0.12
files
echo -ne "\e[0;1m┃${Bpurple}  ✚  Copying Necessary files...          [74%]    |  \r"
sleep 0.12
copying_tools
echo -ne "\e[0;1m┃${Bpurple}  ✚  Copying Zsh-Plugins...              [78%]    /  \r"
sleep 0.12
copying_plugins
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Zsh-Shell                [86%]    -  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Zsh-Shell.               [92%]    \  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Zsh-Shell..              [94%]    |  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Zsh-Theme...             [96%]    /  \r"
sleep 0.12
set_zsh
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setting-up Zsh-Shell...             [98%]    -  \r"
sleep 0.12
zshrc
echo -ne "\e[0;1m┃${Bpurple}  ✚  Reloading Configuration Settings... [99%]    \  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setup completed. Enjoy Oh-my-zsh    [100%]   |  \r"
sleep 0.12
echo -ne "\e[0;1m┃${Bpurple}  ✚  Setup completed. Enjoy Oh-my-zsh    [100%]   /  \r"
reload
echo -ne "\e[0;1m┃${Bpurple}   ✚  Setup completed. Enjoy Oh-my-zsh   [100%]   -  \r"
trap 5; sleep 0.12; NORM
bash "$PREFIX/bin/theme-engine"
}

default() {
if [ $night -gt "17" ] || [ $night -lt "06" ];then
night
else
light
fi
}

#..............................................................

                          "$THEME"

#..............................................................

# Thanks for using Theme-Engine.
